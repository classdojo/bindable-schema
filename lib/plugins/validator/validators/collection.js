// Generated by CoffeeScript 1.6.2
(function() {
  var ValidatorCollection, async, factory, toarray, type,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  factory = require("./factory");

  async = require("async");

  toarray = require("toarray");

  type = require("type-component");

  ValidatorCollection = (function(_super) {
    __extends(ValidatorCollection, _super);

    /*
    */


    function ValidatorCollection(options, _validators) {
      this._validators = _validators;
      ValidatorCollection.__super__.constructor.call(this, options);
    }

    /*
    */


    ValidatorCollection.prototype.test = function(model, next) {
      return async.eachSeries(this._validators, (function(validator, next) {
        return validator.test(model, next);
      }), next);
    };

    return ValidatorCollection;

  })(require("./base"));

  module.exports = ValidatorCollection;

}).call(this);
