// Generated by CoffeeScript 1.6.2
(function() {
  var SubValidator, async, dref, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  async = require("async");

  dref = require("dref");

  SubValidator = (function(_super) {
    __extends(SubValidator, _super);

    function SubValidator() {
      _ref = SubValidator.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SubValidator.prototype.test = function(context, value, next) {
      return async.eachSeries(this.field.fields, (function(field, next) {
        return field.validate(context, dref.get(value != null ? value : {}, field.name), next);
      }), next);
    };

    SubValidator.test = function(options) {
      return options.field.fields;
    };

    SubValidator.create = function(options) {
      return new SubValidator(options);
    };

    return SubValidator;

  })(require("./base"));

  module.exports = SubValidator;

}).call(this);
