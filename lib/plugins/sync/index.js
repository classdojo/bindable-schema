// Generated by CoffeeScript 1.7.0
(function() {
  var Virtual, decor,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  decor = require("./decor");

  Virtual = (function(_super) {
    __extends(Virtual, _super);

    function Virtual() {
      return Virtual.__super__.constructor.apply(this, arguments);
    }


    /*
     */

    Virtual.prototype.schema = function(schema) {};


    /*
     */

    Virtual.prototype.field = function(field) {
      field._syncFactory = decor;
      field._sync = decor.create(field.options);
      field.load = function(model, next) {
        return field._virtual.load(model, next);
      };
      field.save = function(model, next) {
        return field._virtual.save(model, next);
      };
      return field.remove = function(model, next) {
        return field._virtual.remove(model, next);
      };
    };


    /*
     */

    Virtual.prototype.model = function(model) {
      model.load = function(next) {
        return schema.root.load(model, next);
      };
      model.save = function(next) {
        return schema.root.save(model, next);
      };
      return model.remove = function(next) {
        return schema.root.save(model, next);
      };
    };

    return Virtual;

  })(require("../base"));

  module.exports = function(schema) {
    return new Virtual(schema);
  };

}).call(this);
