// Generated by CoffeeScript 1.6.2
(function() {
  var Virtual, decor, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  decor = require("./decor");

  Virtual = (function(_super) {
    __extends(Virtual, _super);

    function Virtual() {
      _ref = Virtual.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    /*
    */


    Virtual.prototype.schema = function(schema) {
      schema.load = function(model, next) {
        return schema.root.load(model, next);
      };
      return schema.save = function(model, next) {
        return schema.root.save(model, next);
      };
    };

    /*
    */


    Virtual.prototype.field = function(field) {
      field._syncFactory = decor;
      field._sync = decor.create(field.options);
      field.load = function(model, next) {
        return field._virtual.load(model, next);
      };
      return field.save = function(model, next) {
        return field._virtual.save(model, next);
      };
    };

    /*
    */


    Virtual.prototype.model = function(model) {
      model.load = function(next) {
        return schema.load(model, next);
      };
      return model.save = function(next) {
        return schema.save(model, next);
      };
    };

    return Virtual;

  })(require("../base"));

  module.exports = function(schema) {
    return new Virtual(schema);
  };

}).call(this);
